<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 빈 등록 -->
	<context:component-scan base-package="test"/>
	<context:component-scan base-package="admin.*"/>
	<context:component-scan base-package="product.*"/>
	<context:component-scan base-package="user.*"/>
	<context:component-scan base-package="review.*"/>
	<context:component-scan base-package="payment.*"/>
	<context:component-scan base-package="matchfood.*"/>

	<!-- 디지 설정정보가 있는 프로퍼티 파일 가져오기 -->
	<context:property-placeholder location="classpath:config/value.properties" />

	<!-- 디비 접속 정보 -->
	<!-- mysql 에 접속하기 위한 접속 정보를 프로퍼티로 넣어주면됨. -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Mybatisspring설정 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="configLocation" 
		value="classpath:config/SqlMapConfig.xml"/> <property name="typeAliasesPackage" 
		value="*.vo" /> <property name="mapperLocations"> <list> <value>classpath:config/userMapper.xml</value> 
		</list> </property> </bean> <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg ref="sqlSessionFactory" /> </bean> 유저매퍼를 자동으로 스캔해서 사용하도록 
		하기위해 얘를 주석처리 <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="spring.user.dao.IUserMapper"/> <property 
		name="sqlSessionTemplate" ref="sqlSession"></property> </bean> -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="admin.dao" />
		<property name="annotationClass" value="admin.dao.AdminAnnotMapper"/>
	</bean>
	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="product.dao" />
		<property name="annotationClass" value="product.dao.ProductAnnotMapper"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="user.dao" />
		<property name="annotationClass" value="user.dao.UserAnnotMapper"/>
	</bean>
	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/SqlMapConfig.xml"/>
		<property name="typeAliasesPackage" value="*.vo"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:config/adminMapper.xml</value>
				<value>classpath:config/userMapper.xml</value>
			</list>
		</property>
	</bean>

	


	<!-- <bean id="myAspect" class="aop.MyAspect"/> <aop:config> <aop:aspect 
		id="test" ref="myAspect"> <aop:around method="logger" pointcut="execution(* 
		spring.user.dao.UserDao.*(..))"/> </aop:aspect> </aop:config> -->

</beans>












